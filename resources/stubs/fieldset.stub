<?php

namespace Filament\Http\Fieldsets;

use Filament\Support\Fields\Field;

class DummyFieldset
{
    /**
     * Return the name of the fieldset.
     * 
     * @var object $model
     * @return array
     */
    public static function name()
    {
        return 'Dummy';
    }

    /**
     * Return the fields for the given form.
     * 
     * Note: these are core database columns defined by the model schema.
     * If you add a field, first create a migration and then add the referring field here.
     * If you want to attach arbitrary data then add the field to the `metaFields()` method defined below.
     * 
     * @var object $model
     * @return array
     */
    public static function fields($model)
    {
        return [
            Field::make('name')
                ->input()
                ->rules(['required', 'string', 'max:255']),
        ];
    }

    /**
     * Return the meta data fields for the given form. 
     * 
     * This will allow for easily attaching arbitrary custom fields 
     * without needing to adjust the database schema.
     * 
     * @var object $model
     * @return array
     */
    public static function metaFields($model)
    {
        return [
            Field::make('meta-field')
                ->input()
                ->label('A Custom Meta Field')
                ->rules(['string', 'max:255']),
        ];
    }

    /**
     * Return the realtime rules to ignore for the given form.
     *
     * @return array
     */
    public static function rulesIgnoreRealtime()
    {
        return [];
    }
} 